.b-nav {
  $self: &;

  @include max-width(large) {
    color: get-color('light');
    height: 100%;
    left: 0;
    position: fixed;
    top: 0;
    transition: all .2s;
    visibility: hidden;
    width: 100%;

    &::before {
      background-color: get-color('dark');
      bottom: 0;
      content: '';
      left: 0;
      opacity: 0;
      position: absolute;
      right: 0;
      top: 0;
      transition: all .2s;
      z-index: -1;
    }
  }

  &__flow {
    display: flex;

    @include max-width(large) {
      flex-direction: column;
      font-size: get-size('700');
      height: 100%;
      justify-content: center;
    }
  }

  &__item {
    @include max-width(large) {
      transform: translate(100%, -100%);
      transition: all .2s;
      transition-delay: calc(var(--n, 0) * .05s);
    }

    + * {
      @include max-width(large) {
        margin-top: get-size('200');
      }
    }
  }

  &__link {
    line-height: 1;

    @include max-width(large) {
      background: get-color('dark-m1');
      padding: get-size('500');
      text-shadow: 0 0 5px #000;
      transform: skewY(-15deg);
    }

    &[aria-current] {
      position: relative;

      @include max-width(large) {
        &::before {
          background: get-color('mid');
          content: '';
          height: 100%;
          left: 0;
          position: absolute;
          top: 0;
          width: 100%;
          z-index: -1;
        }

        @supports (clip-path: polygon(0 0)) {
          &::before {
            background: get-color('mid-m1');
            clip-path: polygon(0 0, 1rem 0, 2rem 90%, 100% 90%, 100% 100%, 0 100%);
          }
        }
      }

      @include min-width(medium) {
        &::after {
          background: get-color('dark');
          bottom: 0;
          content: '';
          height: .25rem;
          left: 0;
          position: absolute;
          width: 100%;
        }
      }
    }
  }

  /**
   * open state
   */
  @include max-width(large) {
    &[data-state='open'] {
      visibility: visible;

      &::before {
        opacity: .75;
      }

      #{$self}__item {
        transform: translate(0);
      }
    }
  }
}
